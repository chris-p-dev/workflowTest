name: Add JIRA Priority Label

on:
  pull_request:
    types: [opened, synchronize]
env:
  ENVIRONMENT: JIRA_ACCESS_TOKEN 

jobs:
  add-label:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v2
    - name: Validate Secrets
      run: |
        if [ -z "${{ secrets.BASIC_AUTH_TOKEN }}" ]; then echo "Missing JIRA_USERNAME"; exit 1; fi
        if [ -z "${{ secrets.JIRA_API_TOKEN }}" ]; then echo "Missing JIRA_API_TOKEN"; exit 1; fi
        if [ -z "${{ secrets.JIRA_BASE_URL }}" ]; then echo "Missing JIRA_BASE_URL"; exit 1; fi
        echo "All required secrets are set."
      shell: bash

    - name: Extract JIRA Ticket ID
      id: extract_ticket_id
      run: |
        PR_BODY=$(jq -r .pull_request.body $GITHUB_EVENT_PATH)
        FIRST_LINE=$(echo "$PR_BODY" | head -n 1)
        if [[ "$FIRST_LINE" =~ ([A-Z]+-[0-9]+) ]]; then
          echo "::set-output name=ticket_id::${BASH_REMATCH[1]}"
        else
          echo "No JIRA ticket ID found in the PR body."
          exit 1
        fi
      shell: bash

    - name: Get JIRA Ticket Priority
      id: get_ticket_priority
      run: |
        TICKET_ID=${{ steps.extract_ticket_id.outputs.ticket_id }}
        RESPONSE=$(curl -s \
                    -H "Authorization: Basic ${{ secrets.BASIC_AUTH_TOKEN }}" \
                    -H "Accept: application/json" \
                    ${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue/$TICKET_ID)
        PRIORITY=$(echo $RESPONSE | jq -r .fields.priority.name)
        echo "::set-output name=priority::${PRIORITY}"
      shell: bash

    - name: Set PR Label
      run: |
        PRIORITY=${{ steps.get_ticket_priority.outputs.priority }}
        LABEL=""
        case $PRIORITY in
          "High")
            LABEL="high-priority"
            ;;
          "Medium")
            LABEL="medium-priority"
            ;;
          "Low")
            LABEL="low-priority"
            ;;
          *)
            echo "Unknown priority: $PRIORITY"
            exit 1
            ;;
        esac
        gh pr edit ${{ github.event.pull_request.number }} --add-label $LABEL
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
